const observerOptions = {
    root: null,
    threshold: 0,
    rootMargin: '0px 0px -100px 0px'
};
const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry
                .target
                .classList
                .add('observedVisible');
            observer.unobserve(entry.target)
        }
    })
}, observerOptions);
window.addEventListener('DOMContentLoaded', (event) => {
    const sections = Array.from(document.getElementsByClassName('observed'));
    for (let section of sections) {
        window.scrollTo(0, 0);
        document.getElementsByTagName('*')[0].style.overflow = 'hidden';
        document.getElementsByTagName('*')[0].style.pointerEvents = 'none';
        setTimeout(function() {
            observer.observe(section)
            document.getElementsByTagName('*')[0].style.overflow = 'visible';
            document.getElementsByTagName('*')[0].tyle.pointerEvents = 'all';
        }, 1000)
    }
});